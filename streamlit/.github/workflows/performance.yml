name: Performance Suite

on:
  push:
    branches:
      - "develop"
  pull_request:
    types: [opened, synchronize, reopened]
  # Allows workflow to be called from other workflows
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

# Avoid duplicate workflows on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-performance
  cancel-in-progress: true

jobs:
  performance:
    runs-on: ubuntu-latest-8-cores
    timeout-minutes: 25

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Streamlit code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          persist-credentials: false
          submodules: "recursive"
          fetch-depth: 2
      - name: Set Python version vars
        uses: ./.github/actions/build_info
      - name: Set up Python ${{ env.PYTHON_MAX_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_MAX_VERSION }}"
      - name: Setup virtual env
        uses: ./.github/actions/make_init
      - name: Install playwright
        run: python -m playwright install --with-deps
      - name: Install integration dependencies
        run: |
          source venv/bin/activate
          uv pip install polars
      - name: Run make frontend-with-profiler
        run: make frontend-with-profiler
      - name: Run playwright performance tests
        run: |
          cd e2e_playwright
          rm -rf ./test-results
          pytest --browser chromium -n 1 --reruns 1 -m "performance" --count=10
      - name: Run make python-performance-tests
        run: make python-performance-tests
      - name: Run make lighthouse-tests
        run: make lighthouse-tests
      - name: Get short SHA
        id: short_sha
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "sha_short=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-6)" >> $GITHUB_OUTPUT
          else
            echo "sha_short=$(echo ${{ github.sha }} | cut -c1-6)" >> $GITHUB_OUTPUT
          fi
      - name: Set MY_DATE_TIME env var
        run: echo "MY_DATE_TIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Upload failed test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright_test_results_${{ steps.short_sha.outputs.sha_short }}
          path: e2e_playwright/test-results
      - name: Upload Performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance_results_${{ env.MY_DATE_TIME }}
          include-hidden-files: true
          path: .benchmarks
